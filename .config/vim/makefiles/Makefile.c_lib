# edit this to change the file location for `make install' and `make uninstall'
export PREFIX=/usr/local

export DEBUG?=0
VERSION:=1.0.0
LIBNAME:=mylib

LIBRARIES:=

export CC:=cc
export CPP:=c++
export LD:=$(CC)

CCFLAGS:=--std=c89
CPPFLAGS:=--std=c++98
CXXFLAGS:=-Wall -Wextra -Wpedantic -Werror --pedantic-errors \
          -fPIC -DVERSION=\"${VERSION}\" -D_POSIX_C_SOURCE=2 \
          -fvisibility=hidden
LDFLAGS:=

ifeq ($(DEBUG),1)
CXXFLAGS+=-ggdb -DDEBUG=1
else
CXXFLAGS+=-O3 -DNDEBUG
endif

CSOURCES:=$(wildcard src/*.c) $(wildcard src/*/*.c)
CPPSOURCES:=$(wildcard src/*.cpp) $(wildcard src/*/*.cpp)
COBJECTS:=$(patsubst src/%,obj/%,$(patsubst %.c,%.o,$(CSOURCES)))
CPPOBJECTS:=$(patsubst src/%,obj/%,$(patsubst %.cpp,%.o,$(CPPSOURCES)))
INCLUDE:=-Iinclude
ifeq ($(LIBRARIES),)
LIBLIBS:=
LIBFLAGS:=
else
LIBLIBS:=$(shell pkg-config --libs $(LIBRARIES))
LIBFLAGS:=$(shell pkg-config --cflags $(LIBRARIES))
endif

HEADERS:=$(shell find include/ -name '*.h')
HEADER_DIRS:=$(shell find include/* -type d)
PREFIXED_HEADERS:=$(patsubst include/%,$(PREFIX)/include/%,$(HEADERS))
PREFIXED_HEADER_DIRS:=$(patsubst include/%,$(PREFIX)/include/%,$(HEADER_DIRS))

# OS-dependant variables
ifeq ($(OS),Windows_NT)
	# Win32
	# ...
	CSOURCES=$(filter-out $(wildcard src/*_posix.c),$(CSOURCES))
	CSOURCES=$(filter-out $(wildcard src/*/**_posix.c),$(CSOURCES))
	CPPSOURCES=$(filter-out $(wildcard src/*_posix.cpp),$(CPPSOURCES))
	CPPSOURCES=$(filter-out $(wildcard src/*/**_posix.cpp),$(CPPSOURCES))
	STATIC_LIB:=$(LIBNAME)-$(VERSION).lib
	LINK_LIB:=$(LIBNAME).dll
	DYNAMIC_LIB:=$(LIBNAME)-$(VERSION).dll
else
	UNAME_S:=$(shell uname -s)
	ifeq ($(UNAME_S),Linux)
		# Linux/Unix
		# ...
		STATIC_LIB:=lib$(LIBNAME).a.$(VERSION)
		LINK_LIB:=lib$(LIBNAME).so
		DYNAMIC_LIB:=$(LINK_LIB).$(VERSION)
	endif
	ifeq ($(UNAME_S),Darwin)
		# macOS
		# ...
		CXXFLAGS+=-Wno-deprecated-declarations -Wno-typedef-redefinition \
		          -Wno-static-in-inline
		STATIC_LIB:=lib$(LIBNAME).$(VERSION).a
		LINK_LIB:=lib$(LIBNAME).dylib
		DYNAMIC_LIB:=lib$(LIBNAME)-$(VERSION).dylib
	endif
	CSOURCES=$(filter-out $(wildcard src/*_win32.c),$(CSOURCES))
	CSOURCES=$(filter-out $(wildcard src/*/**_win32.c),$(CSOURCES))
	CPPSOURCES=$(filter-out $(wildcard src/*_win32.cpp),$(CPPSOURCES))
	CPPSOURCES=$(filter-out $(wildcard src/*/**_win32.cpp),$(CPPSOURCES))
endif

export CCFLAGS
export CPPFLAGS
export CXXFLAGS
export LDFLAGS
export LIBLIBS
export LIBFLAGS

DISTFILES:=COPYING README Makefile
DISTDIRS:=src include

all: $(COBJECTS) $(CPPOBJECTS)
	mkdir -p build
	ar -crv build/$(STATIC_LIB) $(COBJECTS) $(CPPOBJECTS)
	ranlib build/$(STATIC_LIB)
	$(LD) $(COBJECTS) $(CPPOBJECTS) $(LDFLAGS) -shared -o build/$(DYNAMIC_LIB)
	ln -fs $(DYNAMIC_LIB) build/$(LINK_LIB)
	if [ "$(DEBUG)" = 0 ]; then \
		strip build/$(STATIC_LIB) build/$(DYNAMIC_LIB); \
	fi

obj/%.o: src/%.c
	mkdir -p $(shell dirname $@)
	$(CC) $(CCFLAGS) $(CXXFLAGS) $(LIBFLAGS) $(INCLUDE) -c $< -o $@

obj/%.o: src/%.cpp
	mkdir -p $(shell dirname $@)
	$(CPP) $(CPPFLAGS) $(CXXFLAGS) $(LIBFLAGS) $(INCLUDE) -c $< -o $@

dist:
	rm -rf $(BINARY)-$(VERSION)
	mkdir -p $(BINARY)-$(VERSION)
	cp -R $(DISTFILES) $(DISTDIRS) $(BINARY)-$(VERSION)
	tar -cJf $(BINARY)-$(VERSION).tar.xz $(BINARY)-$(VERSION)
	rm -rf $(BINARY)-$(VERSION)

install:
	install -d $(PREFIX)/include
	cp -R include/* $(PREFIX)/include/
	echo $(PREFIXED_HEADER_DIRS) | xargs -r chmod 755
	echo $(PREFIXED_HEADERS) | xargs -r chmod 644
	install -d $(PREFIX)/lib
	cp -a -f build/$(LINK_LIB) $(PREFIX)/lib
	install build/$(DYNAMIC_LIB) $(PREFIX)/lib
	ldconfig || true

uninstall:
	rm -f $(PREFIX)/lib/$(LINK_LIB)
	rm -f $(PREFIX)/lib/$(DYNAMIC_LIB)
	rm -rf $(PREFIXED_HEADERS)

clean:
	rm -rf build obj

.PHONY: all dist install uninstall clean

